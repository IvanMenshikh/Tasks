package main

import (
	"bufio"
	"fmt"
	"math/rand"
	"os"
	"strconv"
	"strings"
	"time"
)

func main() {

	fmt.Println("–ò–≥—Ä–∞ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ' - –æ—Ç 1 –¥–æ 100 –Ω–∞—á–∞–ª–∞—Å—å!")
	fmt.Println("–£–≥–∞–¥–∞–π—Ç–µ —á–∏—Å–ª–æ –∑–∞ 10 –ø–æ–ø—ã—Ç–æ–∫!")
	fmt.Println()

	randomNum := RandomNumberGenerator(100) // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ
	//fmt.Println("–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ:", randomNum)

	maxAttempts := 10 // –º–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫
	attempts := 0
	systemReader := bufio.NewReader(os.Stdin) // –ø–æ–¥–∫–ª—é—á–∞–µ–º —Ä–∏–¥–µ—Ä–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –∏–∑ —Ç–µ—Ä–º–∏–Ω–∞–ª–∞

	for maxAttempts > attempts {
		fmt.Printf("–ü–æ–ø—ã—Ç–∫–∞ #%d - –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: ", attempts+1) // —Å—á–µ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–æ–∫ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –Ω–∞ 1

		input, _ := systemReader.ReadString('\n') // –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ —á—Ç–æ –Ω–∞–ø–∏—Å–∞–ª–∏ –¥–æ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ enter
		input = strings.TrimSpace(input)          // —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–∏–≤—à–∏–π—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —É–±–∏—Ä–∞–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã
		playerNumber, _ := strconv.Atoi(input)    // –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤—ã–≤–∞–µ–º —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ

		attempts++

		if randomNum == playerNumber {
			fmt.Println("–í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ! üéâ")
			fmt.Println("–ò–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–µ–Ω–∞!")
			break
		} else if randomNum > playerNumber {
			fmt.Println("–°–µ–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ üëÜ")
		} else {
			fmt.Println("–°–µ–∫—Ä–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ üëá")
		}

		if attempts == maxAttempts {
			fmt.Printf("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!üò¢")
			fmt.Printf("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ: %d\n", randomNum)
		}
	}
}

// –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —á–∏—Å–ª–∞.
func RandomNumberGenerator(numbers int) int {
	rand.Seed(time.Now().UnixNano())
	randomNumber := rand.Intn(numbers) + 1
	return randomNumber
}
